# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-04-16 15:54
from __future__ import unicode_literals

import cms.models.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0016_auto_20160608_1535'),
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('ref_id', django_extensions.db.fields.RandomCharField(blank=True, editable=False, length=8, unique=True)),
                ('name', models.CharField(default='', help_text='Please enter a name for this Section', max_length=250, verbose_name='Lesson Name')),
                ('short_name', models.CharField(blank=True, default='', help_text="(OPTIONAL) A shortened version of this lesson's name for use in lesson listings", max_length=250, verbose_name='Lesson Short Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default='', editable=False, help_text='Please enter a unique slug for this Lesson (can autogenerate from name field)', max_length=64, populate_from=('ref_id',), unique=True, verbose_name='slug')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_lessons', to=settings.AUTH_USER_MODEL)),
                ('summary', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='lesson_summary', to='cms.Placeholder')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'Lessons',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', help_text='Please enter a name for this module', max_length=250, unique=True, verbose_name='Module Name')),
                ('ref_id', django_extensions.db.fields.RandomCharField(blank=True, editable=False, length=8, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default='', editable=False, help_text='Please enter a unique slug for this module (can autogenerate from name field)', max_length=64, populate_from=('ref_id',), unique=True, verbose_name='slug')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_modules', to=settings.AUTH_USER_MODEL)),
                ('intro', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='module_intro', to='cms.Placeholder')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_modules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Modules',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MultiChoice_answer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ref_id', django_extensions.db.fields.RandomCharField(blank=True, editable=False, length=8, primary_key=True, serialize=False, unique=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('is_correct', models.BooleanField()),
                ('answer_text', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='answer_text', to='cms.Placeholder')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_multichoice_answers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_multichoice_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'MultiChoice-Answers',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='MultiSelect_answer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ref_id', django_extensions.db.fields.RandomCharField(blank=True, editable=False, length=8, primary_key=True, serialize=False, unique=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('is_correct', models.BooleanField()),
                ('answer_text', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='answer_text', to='cms.Placeholder')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_multiselect_answers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_multiselect_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'MultiSelect-Answers',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ref_id', django_extensions.db.fields.RandomCharField(blank=True, editable=False, length=8, primary_key=True, serialize=False, unique=True)),
                ('position', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Quiz-Questions',
                'ordering': ('position',),
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(default='', help_text='Please enter a name for this Section', max_length=250, verbose_name='Section Name')),
                ('short_name', models.CharField(blank=True, default='', help_text="(OPTIONAL) A shortened version of this section's name for use in section listings", max_length=250, verbose_name='Section Short Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default='', editable=False, help_text='Please enter a unique slug for this Section (can autogenerate from name field)', max_length=64, populate_from=('ref_id',), unique=True, verbose_name='slug')),
                ('ref_id', django_extensions.db.fields.RandomCharField(blank=True, editable=False, length=8, unique=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0), help_text='Please specify the Expected Duration of this section. (format: HH:MM:SS)')),
            ],
            options={
                'verbose_name_plural': 'Sections',
                'ordering': ('position',),
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(default='', help_text='Please enter a name for this topic', max_length=250, verbose_name='Topic Name')),
                ('short_name', models.CharField(blank=True, default='', help_text="(OPTIONAL) A shortened version of this topic's name for use in topic listings", max_length=250, verbose_name='Topic Short Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default='', editable=False, help_text='Please enter a unique slug for this Topic (can autogenerate from name field)', max_length=64, populate_from=('name',), unique=True, verbose_name='slug')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_topics', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(default=None, help_text='Please specify the Module for this Topic.', on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='core.Module')),
                ('summary', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='topic_summary', to='cms.Placeholder')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_topics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Topics',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='ActivitySection',
            fields=[
                ('section_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Section')),
                ('content', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='activity_content', to='cms.Placeholder')),
            ],
            options={
                'verbose_name_plural': 'Sections (Activity)',
                'manager_inheritance_from_future': True,
            },
            bases=('core.section',),
        ),
        migrations.CreateModel(
            name='MultiChoice_question',
            fields=[
                ('quizquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.QuizQuestion')),
            ],
            options={
                'verbose_name_plural': 'MultiChoice-Questions',
                'manager_inheritance_from_future': True,
            },
            bases=('core.quizquestion',),
        ),
        migrations.CreateModel(
            name='MultiSelect_question',
            fields=[
                ('quizquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.QuizQuestion')),
            ],
            options={
                'verbose_name_plural': 'MultiSelect-Questions',
                'manager_inheritance_from_future': True,
            },
            bases=('core.quizquestion',),
        ),
        migrations.CreateModel(
            name='QuizSection',
            fields=[
                ('section_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Section')),
            ],
            options={
                'verbose_name_plural': 'Sections (Quiz)',
                'manager_inheritance_from_future': True,
            },
            bases=('core.section',),
        ),
        migrations.CreateModel(
            name='ReadingSection',
            fields=[
                ('section_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Section')),
                ('content', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='reading_content', to='cms.Placeholder')),
            ],
            options={
                'verbose_name_plural': 'Sections (Reading)',
                'manager_inheritance_from_future': True,
            },
            bases=('core.section',),
        ),
        migrations.AddField(
            model_name='section',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_sections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='section',
            name='lesson',
            field=models.ForeignKey(default=None, help_text='Please specify the Lesson for this section.', on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='core.Lesson'),
        ),
        migrations.AddField(
            model_name='section',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_core.section_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='section',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='section',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_sections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='quizquestion',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_quizquestions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='quizquestion',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_core.quizquestion_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='quizquestion',
            name='question_text',
            field=cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='question_text', to='cms.Placeholder'),
        ),
        migrations.AddField(
            model_name='quizquestion',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_quizquestions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='topic',
            field=models.ForeignKey(default=None, help_text='Please specify the Topic for this Lesson.', on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.Topic'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_updated_lessons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='topic',
            unique_together=set([('module', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together=set([('lesson', 'name')]),
        ),
        migrations.AddField(
            model_name='quizquestion',
            name='quiz',
            field=models.ForeignKey(default=None, help_text='Please specify a Quiz Section to map this question to.', on_delete=django.db.models.deletion.CASCADE, related_name='quiz_question_item', to='core.QuizSection'),
        ),
        migrations.AddField(
            model_name='multiselect_answer',
            name='quiz_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_item', to='core.MultiSelect_question'),
        ),
        migrations.AddField(
            model_name='multichoice_answer',
            name='quiz_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_item', to='core.MultiChoice_question'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together=set([('topic', 'name')]),
        ),
    ]
